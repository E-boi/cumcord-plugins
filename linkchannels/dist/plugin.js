(function(s,c,e,l,r){"use strict";var p=()=>cumcord.patcher.injectCSS(".linkChannels{display:none}.iconVisibility-sTNpHs:hover .linkChannels{display:block;cursor:pointer}.linkChannels{z-index:999}");let i,a;const o=c.webpack.find(n=>n.default?.displayName==="ChannelItem");var d=()=>({onLoad(){a=p(),i=s.after("default",o,([{channel:n}],t)=>(t.props.children.props.children[1].props.children[1].props.children.unshift(e.React.createElement(h,{onClick:()=>{r.copyText(`<#${n.id}>`),l.showToast({title:`Copied mention for #${n.name}`,duration:3e3})}})),t)),o.default.displayName="ChannelItem"},onUnload(){a?.(),i?.()}});class h extends e.React.Component{render(){const t=c.webpack.findByProps("iconItem"),u=c.webpack.findByDisplayName("Link"),{TooltipContainer:C}=c.webpack.findByProps("TooltipContainer");return e.React.createElement(C,{className:t.iconItem,text:"Copy Channel",position:"top",color:"black"},e.React.createElement("div",{className:"linkChannels"},e.React.createElement("svg",{className:t.actionIcon,viewBox:"0 0 20 20",onClick:this.props.onClick,children:e.React.createElement(u,{height:"20"})})))}}return d})(cumcord.patcher,cumcord.modules,cumcord.modules.common,cumcord.ui.toasts,cumcord.utils);
