(function(s,t,e,l){"use strict";var p=()=>cumcord.patcher.injectCSS(`.linkChannels{display:none}.iconVisibility-sTNpHs:hover .linkChannels{display:block;cursor:pointer}.linkChannels{z-index:999}
`);let o,r;var d=()=>{const i=t.webpack.find(n=>n.default?.displayName==="ChannelItem"),{copy:c}=t.webpack.findByProps("clipboard").clipboard;return{onLoad(){r=p(),o=s.after("default",i,([{channel:n}],a)=>(a.props.children.props.children[1].props.children[1].props.children.unshift(e.React.createElement(h,{onClick:()=>{c(`<#${n.id}>`),l.showToast({title:`Copied mention for #${n.name}`,duration:3e3})}})),a)),i.default.displayName="ChannelItem"},onUnload(){r?.(),o?.()}}};class h extends e.React.Component{render(){const c=t.webpack.findByProps("iconItem"),n=t.webpack.findByDisplayName("Link"),{TooltipContainer:a}=t.webpack.findByProps("TooltipContainer");return e.React.createElement(a,{className:c.iconItem,text:"Copy Channel",position:"top",color:"black"},e.React.createElement("div",{className:"linkChannels"},e.React.createElement("svg",{className:c.actionIcon,viewBox:"0 0 20 20",onClick:this.props.onClick,children:e.React.createElement(n,{height:"20"})})))}}return d})(cumcord.patcher,cumcord.modules,cumcord.modules.common,cumcord.ui.toasts);
