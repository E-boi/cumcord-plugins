(function(R,n,l,h,o,$){"use strict";const N=o.webpack.findByProps("TooltipContainer").TooltipContainer,z=o.webpack.findByDisplayName("Arrow"),q=o.webpack.findByDisplayName("Clickable"),C=o.webpack.findByProps("ModalRoot"),T=o.webpack.findByDisplayName("Pin"),V=o.webpack.findByDisplayName("FormTitle"),x=o.webpack.find(e=>e.DropdownSizes),W=o.webpack.findByDisplayName("ListSectionItem"),m=o.webpack.findByProps("openModalLazy");let L;const J=e=>L=m.openModal(t=>(e.props={...e.props,...t},e)),Q=()=>m.closeModal(L),{default:Y,MenuSeparator:K,MenuItem:X,MenuCheckboxItem:Z}=l.findByProps("MenuGroup"),{closeContextMenu:ee}=l.findByProps("openContextMenu");function S(e){switch(e.id=`cc-pd-${e.id}`,e.type){case"item":return n.React.createElement(X,{...e},e.items?.()?.map(S));case"separator":return n.React.createElement(K,null);case"checkbox":return n.React.createElement(Z,{...e});default:return null}}var te=e=>(e.items=e.items.map(S),e.rawItems?[...e.items]:n.React.createElement(Y,{onClose:()=>ee()},e.items));const _={dividerDefault:o.webpack.findByProps("dividerDefault").dividerDefault,divider:o.webpack.find(e=>e.divider?.includes("divider-_")).divider};var ne=({className:e})=>n.React.createElement("div",{className:`${_.divider} ${_.dividerDefault} ${e}`});const ie=o.webpack.findByDisplayName("FormItem"),se=o.webpack.findByDisplayName("FormText"),f={...o.webpack.findByProps("marginBottom20"),...o.webpack.findByProps("formText"),...o.webpack.findByDisplayName("Flex")};var ae=e=>n.React.createElement(ie,{title:e.title,required:e.required,className:`${f.Direction.VERTICAL} ${f.Justify.START} ${f.Align.STRETCH} ${f.Wrap.NO_WRAP} ${f.marginBottom20}`},e.children,e.note&&n.React.createElement(se,{className:`${f.description} ${f.marginTop8}`},e.note),n.React.createElement(ne,{className:[f.marginTop20].join(" ")}));const w=o.webpack.findByDisplayName("TextInput");var A=e=>{Array.isArray(e.children)||(e.children=[e.children]);const t=e.children;return delete e.children,n.React.createElement(ae,{title:t[0],required:e.required,note:e.note},t[1]?n.React.createElement("div",{className:"cc-pp-setting-input"},n.React.createElement(w,{...e}),t[1]):n.React.createElement(w,{...e}))},re=({transitionState:e,dmId:t,settings:i})=>{const[s,r]=n.React.useState("");return n.React.createElement(C.ModalRoot,{transitionState:e},n.React.createElement(C.ModalHeader,null,n.React.createElement(V,{tag:"h3"},"New Catgory")),n.React.createElement(C.ModalContent,null,n.React.createElement(A,{placeholder:"Category name",value:s,onChange:r},"New Category:")),n.React.createElement(C.ModalFooter,null,n.React.createElement(x,{disabled:!s,onClick:()=>{const c=i.get("categories",[]);c.push({name:s,dms:[t],pos:c.length,collapsed:!1}),i.set("categories",c),Q(),E()}},"Save")))};const{scroller:le}=l.findByProps("privateChannelsHeaderContainer");function E(){const e=document.getElementsByClassName(le)[0];e.dispatchEvent(new Event("focusin")),setTimeout(()=>{e.dispatchEvent(new Event("focusout"))},10)}function v(e,t,i){let s=[];const r=t.get("categories",[]).find(a=>a.dms.includes(e.id)),c=t.get("guildlist",[]).includes(e.id);if(r?s.push({type:"item",id:"remove-from-category",color:"colorDanger",label:`Remove from ${r.name}`,action(){r.dms=r.dms.filter(a=>a!==e.id),t.set(`categories[${r.pos}]`,r),E()}}):s.push({type:"item",id:"catgory-submenu",label:"Pin to Channel List",items(){const a=[{type:"item",id:"create-new-catgory",color:"colorBrand",label:"Add to new catgory",action(){J(n.React.createElement(re,{dmId:e.id,settings:t}))}},{type:"separator"}];return t.get("categories",[]).forEach(p=>a.push({type:"item",id:`add-to-category-${p.name}`,label:p.name,action(){p.dms.push(e.id),t.set(`categories[${p.pos}]`,p),E()}})),[...a]}}),c?s.push({type:"item",id:"remove-from-list",label:"Unpin from Server List",color:"colorDanger",action:()=>{const a=t.get("guildlist",[]).filter(p=>p!==e.id);t.set("guildlist",a),n.FluxDispatcher.dirtyDispatch({type:"PDM_GUILDLIST_REMOVE"})}}):s.push({type:"item",id:"add-to-list",label:"Pin to Server List",action:()=>{const a=t.get("guildlist",[]);a.push(e.id),t.set("guildlist",a),n.FluxDispatcher.dirtyDispatch({type:"PDM_GUILDLIST_ADD"})}}),i){const a=s;s=[{type:"item",label:"PinDMs",id:"submenu",items:()=>[...a]}]}return te({items:s,rawItems:i})}const{GroupDM:ce,DirectMessage:oe}=l.findByProps("DirectMessage"),{getChannel:de}=l.findByProps("getChannel","hasChannel");var F=({channelId:e,selected:t})=>{const i=de(e);return i?i.type===3?n.React.createElement(ce,{channel:i,selected:t,tabIndex:-1}):n.React.createElement(oe,{channel:i,selected:t,tabIndex:-1}):null};const P={...l.findByProps("privateChannelsHeaderContainer"),...l.findByProps("containerDefault","name")};var pe=({category:e,settings:t})=>{const[i,s]=n.React.useState(e.collapsed);return e.dms.length?n.React.createElement(q,{tabIndex:-1,className:[P.clickable,"cc-pd-header"].join(" "),onClick:()=>{e.collapsed=!i,t.set(`categories[${e.pos}]`,e),E(),s(!i)}},n.React.createElement(W,{className:P.privateChannelsHeaderContainer},n.React.createElement("span",{className:P.headerText},e.name),n.React.createElement(z,{className:"cc-pd-arrow",direction:i?"LEFT":"DOWN"}))):null};const{default:ue}=l.findByProps("DirectMessage"),fe=l.findByDisplayName("ConnectedPrivateChannelsList",!1),{openContextMenu:he}=l.findByProps("openContextMenu"),{lastMessageId:U}=l.findByProps("lastMessageId");function ye(){const e=this;this.injections.push(h.after("render",ue.prototype,function(t,i){const s=i.props.children();return i.props.children=()=>{const r=n.React.createElement(N,{text:"Pin",position:"top"},n.React.createElement(T,{className:"cc-pd-pin",onClick:c=>{c.preventDefault();const a=v(this.props.channel,e.settings);he(c,()=>a)},icon:T}));return s.props.children=[r,s.props.children],s},i})),this.injections.push(h.after("default",fe,(t,i)=>{const s=[],r=i.props.children.props.selectedChannelId,c=this.settings.get("categories",[]);return c.forEach(a=>s.push(...a.dms)),i.props.children.props.privateChannelIds=i.props.children.props.privateChannelIds.filter(a=>!s.includes(a)),i.props.children.props.children=[...i.props.children.props.children],c.forEach(a=>{const p=n.React.createElement(pe,{category:a,settings:this.settings});if(i.props.children.props.children.push(p),a.collapsed){if(a.dms.includes(r)){const d=a.dms.find(u=>u===r);if(!d)return;i.props.children.props.children.push(n.React.createElement(F,{channelId:d,selected:r}))}}else{const d=a.dms.sort((u,B)=>U(B)-U(u)).map(u=>n.React.createElement(F,{channelId:u,selected:r===u}));i.props.children.props.children.push(...d)}}),i}))}const{default:ge}=l.findByProps("DirectMessage"),{getUser:Ee}=l.findByProps("getUser","findByTag"),{isMobileOnline:De,getStatus:k,getState:Ce}=l.findByProps("isMobileOnline"),{getChannel:xe}=l.findByProps("getDMFromUserId"),{listItemTooltip:Me}=l.findByProps("listItemTooltip"),{openContextMenu:Re}=l.findByProps("openContextMenu"),{transitionTo:ve}=l.findByProps("transitionTo"),{getMentionCount:j}=l.findByProps("getMentionCount"),Pe=l.findByDisplayName("AnimatedHalfPill");var be=({settings:e})=>{const[t,i]=n.React.useState(e.get("guildlist",[]));return n.React.useEffect(()=>{const s=({removeAll:r})=>i(r?[]:[...e.get("guildlist",[])]);return n.FluxDispatcher.subscribe("PDM_GUILDLIST_ADD",s),n.FluxDispatcher.subscribe("PDM_GUILDLIST_REMOVE",s),()=>{n.FluxDispatcher.unsubscribe("PDM_GUILDLIST_ADD",s),n.FluxDispatcher.unsubscribe("PDM_GUILDLIST_REMOVE",s)}}),t.map(s=>n.React.createElement(Be,{channelId:s,settings:e}))};function Be({channelId:e,settings:t}){const[i,s]=n.React.useState(!1),[r,c]=n.React.useState(!1),[a,p]=n.React.useState(!!j(e)),d=xe(e);if(!d)return null;const u=Ee(d.recipients[0]),[B,Fe]=n.React.useState(k(u?.id)),I=ge.prototype.renderAvatar.call({props:{user:u,channel:d,status:B,isMobile:De.bind({getState:()=>Ce()})(u?.id)}});return I.props.src=I.props.src.replace("size=32","size=64"),n.React.useEffect(()=>{const M=g=>g.user?.id===u?.id&&Fe(k(g.user.id)),H=g=>{g.channelId===d.id?c(!0):c(!1)},O=g=>g.id===e&&p(!!j(e));return n.FluxDispatcher.subscribe("PRESENCE_UPDATE",M),n.FluxDispatcher.subscribe("PDM_UPDATE",O),n.FluxDispatcher.subscribe("CHANNEL_SELECT",H),()=>{n.FluxDispatcher.unsubscribe("PRESENCE_UPDATE",M),n.FluxDispatcher.unsubscribe("CHANNEL_SELECT",H),n.FluxDispatcher.unsubscribe("PDM_UPDATE",O)}}),n.React.createElement(N,{text:d.type===3?d.name:u.username,position:"left","aria-label":!1,tooltipClassName:Me},n.React.createElement("div",{onMouseEnter:()=>s(!0),onMouseLeave:()=>s(!1),onContextMenu:M=>{Re(M,()=>v(d,t))},onClick:()=>ve(n.constants.Routes.CHANNEL("@me",d.id)),className:"cc-pd-guildpins"},n.React.createElement(Pe,{className:"pill-L_aLMQ",unread:a,selected:r,hovered:i}),I))}const Ie=l.findByProps("HomeButton"),Ne=l.findByDisplayName("TransitionGroup",!1);function Te(){this.injections.push(h.after("HomeButton",Ie,(e,t)=>(Array.isArray(t)||(t=[t]),this.settings.get("guildlist",[]).includes(t[0].props.selectedChannelId)&&(t[0].props.selected=!1),t.push(n.React.createElement(be,{settings:this.settings})),t))),this.injections.push(h.after("render",Ne.default.prototype,(e,t)=>(t.props.children.length&&t.props.children.forEach((i,s)=>{this.settings.get("guildlist",[]).includes(i.key.replace(".$",""))&&(t.props.children.splice(s,1),n.FluxDispatcher.dirtyDispatch({type:"PDM_UPDATE",id:i.key.replace(".$","")}))}),t)))}const me=["DMUserContextMenu","GroupDMUserContextMenu","GuildChannelUserContextMenu","GroupDMContextMenu"];async function b(e,t){const i=l.findByDisplayName(e,!1);if(i)t(i);else{const s=l.findByProps("openContextMenuLazy");this.injections.unshift(h.before("openContextMenuLazy",s,r=>{const c=r[1];return r[1]=async()=>{const a=await c(r[0]);return p=>{const d=a(p);return d?.type?.displayName===e&&t&&(this.injections[0](),t(l.findByDisplayName(e,!1)),t=!1),d}},r}))}}function Le(){b=b.bind(this),me.forEach(e=>{b(e,t=>{this.injections.push(h.after("default",t,([{channel:i}],s)=>{const r=$.findInReactTree(s,c=>Array.isArray(c)&&c.find(a=>a?.props?.id==="user-profile"||a?.props?.id==="remove-icon"));return r&&r.push(v(i,this.settings,!0)),s}))})})}var y={Categories:ye,GuildList:Te,ContextMenus:Le},Se=()=>cumcord.patcher.injectCSS(".channel-1Shao0>.layout-1qmrhw>.children-283-lq{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto}.cc-pd-pin{width:15px;min-width:15px;min-height:15px;height:15px;display:none;opacity:.4}.channel-1Shao0>.layout-1qmrhw:hover .cc-pd-pin{display:block;opacity:.8}.cc-pd-guildpins{display:flex;justify-content:center;position:relative;cursor:pointer}.cc-pd-guildpins .wrapper-1VLyxH{margin-bottom:8px;height:48px!important;width:48px!important}.cc-pd-header{display:flex;justify-content:center;align-items:center}.cc-pd-arrow{height:18px;width:18px}.cc-pd-arrow>polygon{fill:var(--channels-default)}.cc-pd-header:hover .cc-pd-arrow polygon{fill:var(--interactive-hover)}.cc-pp-setting-input{display:flex}.cc-pp-setting-input .inputWrapper-1YNMmM{width:-webkit-fill-available}.cc-pp-setting-input button{margin-left:9px;min-width:130px;min-height:40px}");function _e({category:e,settings:t,onDelete:i}){const[s,r]=n.React.useState(e.name);return console.log(s),n.React.createElement(A,{value:s,onChange:c=>{e.name=c,t.set(`categories[${e.pos}]`,e),r(c)}},s,n.React.createElement(x,{color:x.Colors.RED,onClick:()=>i?.(e.pos)},"Delete Category"))}var we=({settings:e})=>{const[t,i]=n.React.useState(e.get("categories",[]));return t?n.React.createElement("div",null,t.map(s=>n.React.createElement(_e,{category:s,settings:e,onDelete:r=>{t.splice(r,1),t.forEach((c,a)=>c.pos=a),e.set("categories",t),i(null),setTimeout(()=>i(t))}})),n.React.createElement(x,{onClick:()=>{t.push({name:"New Category",dms:[],pos:t.length,collapsed:!1}),e.set("categories",t),i(null),setTimeout(()=>i(t))}},"Add a category")):null};const D={},G={get(e,t){return window._.get(R.persist.ghost,e)??t},set(e,t){R.persist.store=window._.set(R.persist.ghost,e,t)}};var Ae=()=>(Object.keys(y).forEach(e=>{D[e]=[],y[e]=y[e].bind({injections:D[e],settings:G})}),{onLoad(){Object.keys(y).forEach(e=>y[e]()),D.css=[Se()]},onUnload(){Object.keys(y).forEach(e=>{D[e].forEach(t=>t?.())}),D.css[0]?.(),E(),n.FluxDispatcher.dirtyDispatch({type:"PDM_GUILDLIST_REMOVE",removeAll:!0})},settings:n.React.createElement(we,{settings:G})});return Ae})(cumcord.pluginData,cumcord.modules.common,cumcord.modules.webpack,cumcord.patcher,cumcord.modules,cumcord.utils);
