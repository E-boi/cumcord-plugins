(function(c,d,e,a){"use strict";const{TooltipContainer:u}=c.webpack.findByProps("TooltipContainer"),{get:f}=c.webpack.findByProps("get","isSupported");var P=({account:t})=>{const n=c.webpack.findByProps("connectedAccount"),r=f(t.type);return e.React.createElement(u,{className:"sc-connection scrollbarGhostHairline-1mSOM1",text:t.name},e.React.createElement("a",{target:"_blank",href:r.getPlatformUserUrl?.(t)},e.React.createElement("img",{alt:e.i18n.Messages.IMG_ALT_LOGO.format({name:r?.name}),className:n.connectedAccountIcon,src:r?.icon?.darkPNG})))};const s={...c.webpack.findByProps("base","muted"),...c.webpack.findByProps("size12"),...c.webpack.findByProps("bodyTitle"),...c.webpack.findByProps("scrollbarGhostHairline")},{fetchProfile:y}=c.webpack.findByProps("fetchProfile");var b=({user:t})=>{const[n,r]=e.React.useState();return n||y(t,"cumcord",o=>r(o.connected_accounts)),!n?.length>0?null:[e.React.createElement("h3",{className:[s.base,s.muted,s.uppercase,s.size12,s.bodyTitle].join(" ")},"Connections"),e.React.createElement("div",{className:`sc-connectAccounts ${s.scrollbarGhostHairline}`},n.map(o=>e.React.createElement(P,{account:o})))]},h=()=>cumcord.patcher.injectCSS(".sc-connectAccounts{display:flex;overflow-x:auto;margin-bottom:11px}.sc-connection{display:flex}.sc-connection a{display:flex;height:30px;width:34px}");const{openUserProfileModal:g,closeUserProfileModal:B}=a.findByProps("openUserProfileModal"),{getCurrentUser:E}=a.findByProps("getCurrentUser","getUser");var U=()=>{if(a.findByProps("connectedAccount"))return;const t=()=>{setTimeout(B,100),e.FluxDispatcher.unsubscribe(e.constants.ActionTypes.USER_PROFILE_MODAL_OPEN,t)};e.FluxDispatcher.subscribe(e.constants.ActionTypes.USER_PROFILE_MODAL_OPEN,t),g({userId:E().id,guildId:null})};let i,l;const p=c.webpack.find(t=>t.default?.displayName==="UserPopoutBody");var R=()=>(U(),{onLoad(){l=h(),i=d.after("default",p,([{user:t}],n)=>n&&(n.props.children.splice(2,0,e.React.createElement(b,{user:t.id})),n)),p.default.displayName="UserPopoutBody"},onUnload(){i?.(),l?.()}});return R})(cumcord.modules,cumcord.patcher,cumcord.modules.common,cumcord.modules.webpack);
