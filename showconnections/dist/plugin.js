(function(c,f,e,o){"use strict";const{TooltipContainer:P}=c.webpack.findByProps("TooltipContainer"),{get:y}=c.webpack.findByProps("get","isSupported");var b=({account:t})=>{const n=c.webpack.findByProps("connectedAccount"),r=y(t.type);return e.React.createElement(P,{className:"sc-connection scrollbarGhostHairline-1mSOM1",text:t.name},e.React.createElement("a",{target:"_blank",href:r.getPlatformUserUrl?.(t)},e.React.createElement("img",{alt:e.i18n.Messages.IMG_ALT_LOGO.format({name:r?.name}),className:n.connectedAccountIcon,src:r?.icon?.darkPNG})))};const s={...c.webpack.findByProps("base","muted"),...c.webpack.findByProps("size12"),...c.webpack.findByProps("bodyTitle"),...c.webpack.findByProps("scrollbarGhostHairline")},{fetchProfile:h}=c.webpack.findByProps("fetchProfile");var g=({user:t})=>{const[n,r]=e.React.useState();return n||h(t,"cumcord",a=>r(a.connected_accounts)),!n?.length>0?null:[e.React.createElement("h3",{className:[s.base,s.muted,s.uppercase,s.size12,s.bodyTitle].join(" ")},"Connections"),e.React.createElement("div",{className:`sc-connectAccounts ${s.scrollbarGhostHairline}`},n.map(a=>e.React.createElement(b,{account:a})))]},B=()=>cumcord.patcher.injectCSS(".sc-connectAccounts{display:flex;overflow-x:auto;margin-bottom:11px}.sc-connection{display:flex}.sc-connection a{display:flex;height:30px;width:34px}");const{openUserProfileModal:E,closeUserProfileModal:U}=o.findByProps("openUserProfileModal"),{getCurrentUser:i}=o.findByProps("getCurrentUser","getUser");function l(){if(o.findByProps("connectedAccount"))return;if(!i())return setTimeout(l,100);const t=()=>{setTimeout(U,100),e.FluxDispatcher.unsubscribe(e.constants.ActionTypes.USER_PROFILE_MODAL_OPEN,t)};e.FluxDispatcher.subscribe(e.constants.ActionTypes.USER_PROFILE_MODAL_OPEN,t),E({userId:i().id,guildId:null})}let p,d;const u=c.webpack.find(t=>t.default?.displayName==="UserPopoutBody");var R=()=>(l(),{onLoad(){d=B(),p=f.after("default",u,([{user:t}],n)=>n&&(n.props.children.splice(2,0,e.React.createElement(g,{user:t.id})),n)),u.default.displayName="UserPopoutBody"},onUnload(){p?.(),d?.()}});return R})(cumcord.modules,cumcord.patcher,cumcord.modules.common,cumcord.modules.webpack);
